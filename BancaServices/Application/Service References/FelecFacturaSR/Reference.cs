//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BancaServices.FelecFacturaSR {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://ws.consulta.computec.com/", ConfigurationName="FelecFacturaSR.WsdlFacturaWebPortType")]
    public interface WsdlFacturaWebPortType {
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.DataContractFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="resultado")]
        string consultarDocumentos(string llaveConsulta, string fechaInicial, string fechaFinal, string parametrosAdicionales, string formatoConsulta, string usuarioRemoto, string cliente, string producto);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="resultado")]
        System.Threading.Tasks.Task<string> consultarDocumentosAsync(string llaveConsulta, string fechaInicial, string fechaFinal, string parametrosAdicionales, string formatoConsulta, string usuarioRemoto, string cliente, string producto);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.DataContractFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="documento1")]
        byte[] obtenerDocumento(string llaveConsulta, string fechaInicial, string fechaFinal, string parametrosAdicionales, string formatoConsulta, string usuarioRemoto, string cliente, string producto);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="documento1")]
        System.Threading.Tasks.Task<byte[]> obtenerDocumentoAsync(string llaveConsulta, string fechaInicial, string fechaFinal, string parametrosAdicionales, string formatoConsulta, string usuarioRemoto, string cliente, string producto);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.DataContractFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="documento2")]
        byte[] obtenerDocumentoId(string llaveConsulta, string fechaInicial, string fechaFinal, string docId, string parametrosAdicionales, string formatoConsulta, string usuarioRemoto, string cliente, string producto, string folder);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="documento2")]
        System.Threading.Tasks.Task<byte[]> obtenerDocumentoIdAsync(string llaveConsulta, string fechaInicial, string fechaFinal, string docId, string parametrosAdicionales, string formatoConsulta, string usuarioRemoto, string cliente, string producto, string folder);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.DataContractFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="enviado")]
        string enviarMailDocumento(string llaveConsulta, string fechaInicial, string fechaFinal, string parametrosAdicionales, string formatoConsulta, string usuarioRemoto, string cliente, string producto, string mailPara, string mailCC);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="enviado")]
        System.Threading.Tasks.Task<string> enviarMailDocumentoAsync(string llaveConsulta, string fechaInicial, string fechaFinal, string parametrosAdicionales, string formatoConsulta, string usuarioRemoto, string cliente, string producto, string mailPara, string mailCC);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.DataContractFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="enviado")]
        string enviarMailDocumentoId(string llaveConsulta, string fechaInicial, string fechaFinal, string docId, string parametrosAdicionales, string formatoConsulta, string usuarioRemoto, string cliente, string producto, string mailPara, string mailCC);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="enviado")]
        System.Threading.Tasks.Task<string> enviarMailDocumentoIdAsync(string llaveConsulta, string fechaInicial, string fechaFinal, string docId, string parametrosAdicionales, string formatoConsulta, string usuarioRemoto, string cliente, string producto, string mailPara, string mailCC);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface WsdlFacturaWebPortTypeChannel : BancaServices.FelecFacturaSR.WsdlFacturaWebPortType, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WsdlFacturaWebPortTypeClient : System.ServiceModel.ClientBase<BancaServices.FelecFacturaSR.WsdlFacturaWebPortType>, BancaServices.FelecFacturaSR.WsdlFacturaWebPortType {
        
        public WsdlFacturaWebPortTypeClient() {
        }
        
        public WsdlFacturaWebPortTypeClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WsdlFacturaWebPortTypeClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WsdlFacturaWebPortTypeClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WsdlFacturaWebPortTypeClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string consultarDocumentos(string llaveConsulta, string fechaInicial, string fechaFinal, string parametrosAdicionales, string formatoConsulta, string usuarioRemoto, string cliente, string producto) {
            return base.Channel.consultarDocumentos(llaveConsulta, fechaInicial, fechaFinal, parametrosAdicionales, formatoConsulta, usuarioRemoto, cliente, producto);
        }
        
        public System.Threading.Tasks.Task<string> consultarDocumentosAsync(string llaveConsulta, string fechaInicial, string fechaFinal, string parametrosAdicionales, string formatoConsulta, string usuarioRemoto, string cliente, string producto) {
            return base.Channel.consultarDocumentosAsync(llaveConsulta, fechaInicial, fechaFinal, parametrosAdicionales, formatoConsulta, usuarioRemoto, cliente, producto);
        }
        
        public byte[] obtenerDocumento(string llaveConsulta, string fechaInicial, string fechaFinal, string parametrosAdicionales, string formatoConsulta, string usuarioRemoto, string cliente, string producto) {
            return base.Channel.obtenerDocumento(llaveConsulta, fechaInicial, fechaFinal, parametrosAdicionales, formatoConsulta, usuarioRemoto, cliente, producto);
        }
        
        public System.Threading.Tasks.Task<byte[]> obtenerDocumentoAsync(string llaveConsulta, string fechaInicial, string fechaFinal, string parametrosAdicionales, string formatoConsulta, string usuarioRemoto, string cliente, string producto) {
            return base.Channel.obtenerDocumentoAsync(llaveConsulta, fechaInicial, fechaFinal, parametrosAdicionales, formatoConsulta, usuarioRemoto, cliente, producto);
        }
        
        public byte[] obtenerDocumentoId(string llaveConsulta, string fechaInicial, string fechaFinal, string docId, string parametrosAdicionales, string formatoConsulta, string usuarioRemoto, string cliente, string producto, string folder) {
            return base.Channel.obtenerDocumentoId(llaveConsulta, fechaInicial, fechaFinal, docId, parametrosAdicionales, formatoConsulta, usuarioRemoto, cliente, producto, folder);
        }
        
        public System.Threading.Tasks.Task<byte[]> obtenerDocumentoIdAsync(string llaveConsulta, string fechaInicial, string fechaFinal, string docId, string parametrosAdicionales, string formatoConsulta, string usuarioRemoto, string cliente, string producto, string folder) {
            return base.Channel.obtenerDocumentoIdAsync(llaveConsulta, fechaInicial, fechaFinal, docId, parametrosAdicionales, formatoConsulta, usuarioRemoto, cliente, producto, folder);
        }
        
        public string enviarMailDocumento(string llaveConsulta, string fechaInicial, string fechaFinal, string parametrosAdicionales, string formatoConsulta, string usuarioRemoto, string cliente, string producto, string mailPara, string mailCC) {
            return base.Channel.enviarMailDocumento(llaveConsulta, fechaInicial, fechaFinal, parametrosAdicionales, formatoConsulta, usuarioRemoto, cliente, producto, mailPara, mailCC);
        }
        
        public System.Threading.Tasks.Task<string> enviarMailDocumentoAsync(string llaveConsulta, string fechaInicial, string fechaFinal, string parametrosAdicionales, string formatoConsulta, string usuarioRemoto, string cliente, string producto, string mailPara, string mailCC) {
            return base.Channel.enviarMailDocumentoAsync(llaveConsulta, fechaInicial, fechaFinal, parametrosAdicionales, formatoConsulta, usuarioRemoto, cliente, producto, mailPara, mailCC);
        }
        
        public string enviarMailDocumentoId(string llaveConsulta, string fechaInicial, string fechaFinal, string docId, string parametrosAdicionales, string formatoConsulta, string usuarioRemoto, string cliente, string producto, string mailPara, string mailCC) {
            return base.Channel.enviarMailDocumentoId(llaveConsulta, fechaInicial, fechaFinal, docId, parametrosAdicionales, formatoConsulta, usuarioRemoto, cliente, producto, mailPara, mailCC);
        }
        
        public System.Threading.Tasks.Task<string> enviarMailDocumentoIdAsync(string llaveConsulta, string fechaInicial, string fechaFinal, string docId, string parametrosAdicionales, string formatoConsulta, string usuarioRemoto, string cliente, string producto, string mailPara, string mailCC) {
            return base.Channel.enviarMailDocumentoIdAsync(llaveConsulta, fechaInicial, fechaFinal, docId, parametrosAdicionales, formatoConsulta, usuarioRemoto, cliente, producto, mailPara, mailCC);
        }
    }
}
